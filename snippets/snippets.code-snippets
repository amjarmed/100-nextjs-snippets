{
  "nextjs-page": {
    "prefix": "nexpage",
    "body": [
      "import type { NextPage } from 'next';",
      /* These lines are set differently for each project */
      "import HeadWrapper from '@/components/layout/HeadWrapper';",
      "import Layout from '@/components/layout/Layout';",
      "import NeedLogin from '@/components/layout/NeedLogin';",
      "",
      /* POINTâ‘  */
      "const ${TM_DIRECTORY/.*\\/(.)(.+)$/${1:/upcase}$2/}: NextPage = () => {",
      "  return (",
      "    <HeadWrapper>",
      "      <NeedLogin>",
      "        <Layout>",
      "          <main></main>",
      "        </Layout>",
      "      </NeedLogin>",
      "    </HeadWrapper>",
      "  );",
      "};",
      "",
      "export default ${TM_DIRECTORY/.*\\/(.)(.+)$/${1:/upcase}$2/};"
    ],
    "scope": "typescriptreact",
    "description": "Create a basic Next.js page component."
  },
  "new Function Component": {
    "prefix": "nexfc",
    "body": [
      "import { FC } from 'react';",
      "",
      "type Props = {};",
      "const ${1:$TM_FILENAME_BASE}: FC<Props> = ({}) => {",
      "  return <></>;",
      "};",
      "export default ${1:$TM_FILENAME_BASE};"
    ],
    "description": "Template of new FC"
  },
  "nextjs-api-route": {
    "prefix": "nexapi",
    "body": [
      "import { NextApiRequest, NextApiResponse } from 'next';",
      "",
      "export default function handler(req: NextApiRequest, res: NextApiResponse) {",
      "  res.status(200).json({ message: 'Hello, Next.js!' });",
      "}"
    ],
    "description": "Create a basic Next.js API route."
  },
  "nextjs-getstaticprops": {
    "prefix": "nexgetstaticprops",
    "body": [
      "export async function getStaticProps() {",
      "  return {",
      "    props: {}, // will be passed to the page component as props",
      "  };",
      "}"
    ],
    "description": "Create a getStaticProps function."
  },
  "nextjs-getstaticpaths": {
    "prefix": "nexgetstaticpaths",
    "body": [
      "export async function getStaticPaths() {",
      "  return {",
      "    paths: [],",
      "    fallback: false",
      "  };",
      "}"
    ],
    "description": "Create a getStaticPaths function."
  },
  "nextjs-getserversideprops": {
    "prefix": "nexgetserversideprops",
    "body": [
      "export async function getServerSideProps(context) {",
      "  return {",
      "    props: {}, // will be passed to the page component as props",
      "  };",
      "}"
    ],
    "description": "Create a getServerSideProps function."
  },
  "nextjs-useeffect": {
    "prefix": "nexuseeffect",
    "body": [
      "import { useEffect } from 'react';",
      "",
      "useEffect(() => {",
      "  $1",
      "}, []);"
    ],
    "description": "Basic useEffect hook."
  },
  "nextjs-usecontext": {
    "prefix": "nexusecontext",
    "body": [
      "import { useContext } from 'react';",
      "import { $1Context } from '../context/$1Context';",
      "",
      "const $1 = () => {",
      "  const context = useContext($1Context);",
      "  return <div>{context}</div>;",
      "};"
    ],
    "description": "useContext hook with a custom context."
  },
  "nextjs-head-component": {
    "prefix": "nexhead",
    "body": [
      "import Head from 'next/head';",
      "",
      "const $1 = () => (",
      "  <Head>",
      "    <title>$2</title>",
      "    <meta name='description' content='$3' />",
      "  </Head>",
      ");",
      "",
      "export default $1;"
    ],
    "description": "Create a Head component for SEO."
  },
  "nextjs-link-component": {
    "prefix": "nexlink",
    "body": [
      "import Link from 'next/link';",
      "",
      "<Link href='$1'>",
      "  <a>$2</a>",
      "</Link>"
    ],
    "description": "Create a Link component for Next.js navigation."
  },
  "nextjs-image-component": {
    "prefix": "neximage",
    "body": [
      "import Image from 'next/image';",
      "",
      "<Image",
      "  src='$1'",
      "  alt='$2'",
      "  width={$3}",
      "  height={$4}",
      "/>"
    ],
    "description": "Create a Next.js Image component with required props."
  },

  "React useState": {
    "prefix": "nexstate",
    "body": ["const [$1, set$2] = useState($3);"]
  },
  "React useEffect": {
    "prefix": "nexuseEffect",
    "body": ["useEffect(() => {", "  $1", "}, [$2]);"]
  },
  "React useCallback": {
    "prefix": "nexuseCallback",
    "body": ["useCallback(() => {", "  $1", "}, [$2]);"]
  },
  "React useMemo": {
    "prefix": "nex-useMemo",
    "body": ["useMemo(() => {", "  $1", "}, [$2]);"]
  },
  "React Function Component": {
    "key": "reactArrowFunctionExportComponent",
    "prefix": "nexrafce",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <div>",
      "      <h1>${1:first}</h1>",
      "    </div>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Creates a React Arrow Function Component with ES7 module system",
    "scope": "typescript,typescriptreact,javascript,javascriptreact"
  },
  "React Function Component with Props": {
    "key": "reactArrowFunctionExportComponent",
    "prefix": "nexrafcep",
    "body": [
      "interface $1Props {}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = ({}: $1Props) => {",
      "  return (",
      "    <div>",
      "      <h1>${1:first}</h1>",
      "    </div>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ],
    "description": "Creates a React Arrow Function Component with ES7 module system",
    "scope": "typescript,typescriptreact,javascript,javascriptreact"
  },

  "Async React Function Component": {
    "prefix": "nexarafce",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = async () => {",
      "  return (",
      "    <div>",
      "      <h1>${1:first}</h1>",
      "    </div>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "Async React Function Component with Props": {
    "prefix": "nexarafcep",
    "body": [
      "interface $1Props {}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = async ({}: $1Props) => {",
      "  return (",
      "    <div>",
      "      <h1>${1:first}</h1>",
      "    </div>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "import": {
    "key": "import",
    "prefix": "neximp",
    "body": ["import ${2:second} from '${1:first}'"],
    "scope": "typescript,typescriptreact,javascript,javascriptreact"
  },
  "importDestructing": {
    "key": "importDestructing",
    "prefix": "neximd",
    "body": ["import { ${2:second} } from '${1:first}'"],
    "scope": "typescript,typescriptreact,javascript,javascriptreact"
  },
  "reduxSlice": {
    "key": "reduxSlice",
    "prefix": "nexrxslice",
    "body": [
      "import { createSlice } from '@reduxjs/toolkit'",
      "",
      "const initialState = {",
      "  ${3}",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = createSlice({",
      "  name: '${2:second}',",
      "  initialState,",
      "  reducers: {}",
      "});",
      "",
      "export const {} = ${1:${TM_FILENAME_BASE}}.actions",
      "",
      "export default ${1:${TM_FILENAME_BASE}}.reducer"
    ],
    "scope": "typescript,typescriptreact,javascript,javascriptreact"
  }
}
